/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RideHailing,
  RideHailingInterface,
} from "../../contracts/RideHailing";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "driver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rideId",
        type: "uint256",
      },
    ],
    name: "RideAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "rider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rideId",
        type: "uint256",
      },
    ],
    name: "RideCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "rider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rideId",
        type: "uint256",
      },
    ],
    name: "RideCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "rider",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "rideId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fare",
        type: "uint256",
      },
    ],
    name: "RideRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rideId",
        type: "uint256",
      },
    ],
    name: "acceptRide",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rideId",
        type: "uint256",
      },
    ],
    name: "cancelRide",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rideId",
        type: "uint256",
      },
    ],
    name: "completeRide",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPricePerMeter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rideId",
        type: "uint256",
      },
    ],
    name: "getRide",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "rider",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "driver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fare",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "rideCompleted",
            type: "bool",
          },
        ],
        internalType: "struct RideHailing.Ride",
        name: "ride",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerMeter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registerUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredUsers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_distance",
        type: "uint256",
      },
    ],
    name: "requestRide",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "rideCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rides",
    outputs: [
      {
        internalType: "address payable",
        name: "rider",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "driver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "rideCompleted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPricePerMeter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526103e860045534801561001657600080fd5b5061002033610025565b610075565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c0e806100846000396000f3fe6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063c416dd0b11610059578063c416dd0b1461036a578063c51562cb1461037d578063f2fde38b1461039d578063ff46f4ad146103bd57600080fd5b80638da5cb5b146103065780639327b0771461032e578063a6f07b2914610341578063b47c18831461035457600080fd5b80636bad66f6116100c65780636bad66f6146101d5578063712bfa1e146101f5578063715018a6146102145780637c7b0ff41461022957600080fd5b80630e50cee5146100f85780634d3820eb1461013d5780635205f1121461015457600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50610128610113366004610b49565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561014957600080fd5b506101526103d3565b005b34801561016057600080fd5b506101a861016f366004610b79565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b0393841693909116919060ff1684565b604080516001600160a01b0395861681529490931660208501529183015215156060820152608001610134565b3480156101e157600080fd5b506101526101f0366004610b79565b61047a565b34801561020157600080fd5b506004545b604051908152602001610134565b34801561022057600080fd5b50610152610487565b34801561023557600080fd5b506102bf610244366004610b79565b60408051608081018252600080825260208201819052918101829052606081019190915250600090815260016020818152604092839020835160808101855281546001600160a01b039081168252938201549093169183019190915260028101549282019290925260039091015460ff161515606082015290565b604051610134919060006080820190506001600160a01b03808451168352806020850151166020840152506040830151604083015260608301511515606083015292915050565b34801561031257600080fd5b506000546040516001600160a01b039091168152602001610134565b61015261033c366004610b79565b61049b565b61015261034f366004610b79565b610618565b34801561036057600080fd5b5061020660035481565b610152610378366004610b79565b6107b9565b34801561038957600080fd5b50610152610398366004610b79565b61090c565b3480156103a957600080fd5b506101526103b8366004610b49565b610a10565b3480156103c957600080fd5b5061020660045481565b3360009081526002602052604090205460ff16156104385760405162461bcd60e51b815260206004820152601760248201527f5573657220616c7265616479207265676973746572656400000000000000000060448201526064015b60405180910390fd5b33600081815260026020526040808220805460ff19166001179055517f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b99190a2565b610482610a89565b600455565b61048f610a89565b6104996000610ae3565b565b3360009081526002602052604090205460ff166104f05760405162461bcd60e51b8152602060048201526013602482015272155cd95c881b9bdd081c9959da5cdd195c9959606a1b604482015260640161042f565b60006104fb82610b33565b90508034101561054d5760405162461bcd60e51b815260206004820152601560248201527f4e6f7420656e6f7567682066756e64732073656e740000000000000000000000604482015260640161042f565b60408051608081018252338082526000602080840182815284860187815260608601848152600380548652600180865295899020975188546001600160a01b03199081166001600160a01b03928316178a559451968901805490951696169590951790925551600286015551938201805460ff19169415159490941790935554925184815290917f0b365df8b2edeb27d7b308aaf9ad3e1f2ff53483d6893ab98c780885ba4bc639910160405180910390a36003805490600061060f83610ba8565b91905055505050565b600081815260016020526040902080546001600160a01b0316331461067f5760405162461bcd60e51b815260206004820152601e60248201527f4f6e6c792072696465722063616e2063616e63656c2074686520726964650000604482015260640161042f565b60018101546001600160a01b0316156106e65760405162461bcd60e51b8152602060048201526024808201527f5269646520616c72656164792061636365707465642c2063616e6e6f742063616044820152631b98d95b60e21b606482015260840161042f565b600381015460ff161561073b5760405162461bcd60e51b815260206004820152601660248201527f5269646520616c726561647920636f6d706c6574656400000000000000000000604482015260640161042f565b60038101805460ff19166001179055604051829033907f94654e1242c379bfa05e192407226c3e8b0862176f28e48c23aff6057a82798d90600090a3805460028201546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156107b4573d6000803e3d6000fd5b505050565b600081815260016020526040902080546001600160a01b031633146108205760405162461bcd60e51b815260206004820181905260248201527f4f6e6c792072696465722063616e20636f6d706c657465207468652072696465604482015260640161042f565b600381015460ff16156108755760405162461bcd60e51b815260206004820152601660248201527f5269646520616c726561647920636f6d706c6574656400000000000000000000604482015260640161042f565b806002015434101561088657600080fd5b60038101805460ff19166001179055805460405183916001600160a01b0316907fed11881b5dd0f44958691c5ac088d3a81ac7e8f8bbd6dd990a8b427f8c3b38ef90600090a3600181015460028201546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156107b4573d6000803e3d6000fd5b600081815260016020908152604080832033845260029092529091205460ff1661096e5760405162461bcd60e51b8152602060048201526013602482015272155cd95c881b9bdd081c9959da5cdd195c9959606a1b604482015260640161042f565b60018101546001600160a01b0316156109c95760405162461bcd60e51b815260206004820152601560248201527f5269646520616c72656164792061636365707465640000000000000000000000604482015260640161042f565b6001810180546001600160a01b031916339081179091556040518391907f87348e58c77a96989aaef43c7d87d383c1f283c3a3c3d319b96630ef2c0f906a90600090a35050565b610a18610a89565b6001600160a01b038116610a7d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042f565b610a8681610ae3565b50565b6000546001600160a01b031633146104995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060045482610b439190610bc1565b92915050565b600060208284031215610b5b57600080fd5b81356001600160a01b0381168114610b7257600080fd5b9392505050565b600060208284031215610b8b57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610bba57610bba610b92565b5060010190565b8082028115828204841417610b4357610b43610b9256fea2646970667358221220b5acd66baf9bbb17a63e01ac624573b17318673ebb3f3c7ba5b8bd2a266308a964736f6c63430008110033";

type RideHailingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RideHailingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RideHailing__factory extends ContractFactory {
  constructor(...args: RideHailingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RideHailing> {
    return super.deploy(overrides || {}) as Promise<RideHailing>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RideHailing {
    return super.attach(address) as RideHailing;
  }
  override connect(signer: Signer): RideHailing__factory {
    return super.connect(signer) as RideHailing__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RideHailingInterface {
    return new utils.Interface(_abi) as RideHailingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RideHailing {
    return new Contract(address, _abi, signerOrProvider) as RideHailing;
  }
}
